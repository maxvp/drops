{"version":3,"file":"moveable.cjs.js","sources":["../src/react-moveable/ables/AbleManager.ts","../src/react-moveable/consts.ts","../src/react-moveable/utils.tsx","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/gesto/CustomGesto.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/gesto/GestoUtils.ts","../src/react-moveable/ables/snappable/utils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/snappable/render.tsx","../src/react-moveable/ables/snappable/snapBounds.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/renderDirections.tsx","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/Padding.tsx","../src/react-moveable/ables/roundable/borderRadius.tsx","../src/react-moveable/ables/Clippable.tsx","../src/react-moveable/ables/OriginDraggable.tsx","../src/react-moveable/ables/Roundable.tsx","../src/react-moveable/ables/BeforeRenderable.ts","../src/react-moveable/ables/Renderable.ts","../src/react-moveable/gesto/getAbleGesto.ts","../src/react-moveable/EventManager.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/ables/Clickable.ts","../src/react-moveable/ables/edgeDraggable.tsx","../src/react-moveable/ables/IndividualGroupable.tsx","../src/react-moveable/ables/consts.ts","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/MoveableIndividualGroup.tsx","../src/react-moveable/InitialMoveable.tsx","../src/react-moveable/Moveable.tsx","../src/react-moveable/makeMoveable.ts","../src/react-moveable/index.umd.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: {} as const,\n        props: {\n            [name]: Boolean,\n        } as Props,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    s: [2, 3],\n    w: [2, 0],\n    e: [1, 3],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n];\n","import { PREFIX, IS_WEBKIT605, TINY_NUM, IS_WEBKIT } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport {\n    splitBracket, isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    ignoreDimension,\n    convertCSStoMatrix,\n    convertMatrixtoCSS,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ControlPose, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist } from \"css-to-mat\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    const value = splitBracket(transform).value!;\n    return value.split(/s*,\\s*/g).map(v => parseFloat(v));\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const transform = style.transform;\n        position = style.position!;\n\n        if (target.tagName.toLowerCase() === \"svg\" || position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    container: SVGElement | HTMLElement | null | undefined,\n    style: CSSStyleDeclaration,\n    isFixed: boolean,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    if (isFixed) {\n        const containerClientRect = (container || document.documentElement).getBoundingClientRect();\n\n        offsetLeft -= containerClientRect.left;\n        offsetTop -= containerClientRect.top;\n    }\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el),\n) {\n    const bodyStyle = getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    let requestEnd = !checkContainer && target === container;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    const offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const position = style.position;\n        const isFixed = position === \"fixed\";\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(style.transform!));\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, container, style, isFixed);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        } else if (tagName === \"g\" && target !== el) {\n            offsetLeft = 0;\n            offsetTop = 0;\n        }\n        const {\n            offsetParent,\n            isEnd: isOffsetEnd,\n            isStatic,\n        } = getOffsetInfo(el, container);\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n\n        if (hasOffset && offsetContainer !== offsetParent) {\n            // border\n            parentClientLeft = offsetParent.clientLeft;\n            parentClientTop = offsetParent.clientTop;\n        }\n        if (hasOffset && offsetParent === document.body) {\n            const margin = getBodyOffset(el, false, style);\n            offsetLeft += margin[0];\n            offsetTop += margin[1];\n        }\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n        if (hasOffset) {\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - el.scrollLeft + parentClientLeft,\n                    offsetTop - el.scrollTop + parentClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === document.body) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n    };\n}\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n) {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    if (target) {\n        const style = getComputedStyle(target);\n\n        width = (target as HTMLElement).offsetWidth;\n        height = (target as HTMLElement).offsetHeight;\n\n        if (isUndefined(width)) {\n            [width, height] = getSize(target, style, true);\n        }\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n    return {\n        width,\n        height,\n        rotation,\n        // rootMatrix: number[];\n        // beforeMatrix: number[];\n        // offsetMatrix: number[];\n        // allMatrix: number[];\n        // targetMatrix: number[];\n        // targetTransform: string;\n        // transformOrigin: number[];\n        // targetOrigin: number[];\n        // is3d: boolean;\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        // left: number;\n        // top: number;\n        // right: number;\n        // bottom: number;\n        // origin: number[];\n        // pos1: number[];\n        // pos2: number[];\n        // pos3: number[];\n        // pos4: number[];\n        // direction: 1 | -1;\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        ...allResult,\n    };\n}\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n) {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, true); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(rootMatrixes);\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    rootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || document.body;\n    const endContainer = rootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n    };\n}\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox) {\n        return [0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const [width, height] = getSize(target, undefined, true);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function calculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number) {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(poses);\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = getComputedStyle(target),\n    isOffset?: boolean,\n    isBoxSizing: boolean = isOffset || style.boxSizing === \"border-box\",\n) {\n    let width = (target as HTMLElement).offsetWidth;\n    let height = (target as HTMLElement).offsetHeight;\n    const hasOffset = !isUndefined(width);\n\n    if ((isOffset || isBoxSizing) && hasOffset) {\n        return [width, height];\n    }\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n        return [bbox.width, bbox.height];\n    }\n\n    width = target.clientWidth;\n    height = target.clientHeight;\n\n    if (isOffset || isBoxSizing) {\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n\n        return [\n            width + borderLeft + borderRight,\n            height + borderTop + borderBottom,\n        ];\n    } else {\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        return [\n            width - paddingLeft - paddingRight,\n            height - paddingTop - paddingBottom,\n        ];\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function getTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    // state?: Partial<MoveableManagerState> | false | undefined,\n) {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!, false,\n        // state,\n    );\n    if (target) {\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        targetClientRect = getClientRect(target);\n        containerClientRect = getClientRect(\n            getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body,\n            true,\n        );\n        if (moveableElement) {\n            moveableClientRect = getClientRect(moveableElement);\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        ...result,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n\n    if (el === document.body || el === document.documentElement) {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        left = -(document.documentElement.scrollLeft || document.body.scrollLeft);\n        top = -(document.documentElement.scrollTop || document.body.scrollTop);\n    } else {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        right: left + width,\n        top,\n        bottom: top + height,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n        rect.overflow = getComputedStyle(el).overflow !== \"visible\";\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function unset(self: any, name: string) {\n    self[name]?.unset();\n    self[name] = null;\n}\n\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n    } as any;\n\n    if (datas.isStartEvent) {\n        datas.lastEvent = nextParams;\n    } else {\n        datas.isStartEvent = true;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n    } as any;\n}\n\nexport function triggerEvent<T extends IObject<any> = MoveableProps, U extends keyof T = string>(\n    moveable: any,\n    name: U,\n    params: T[U] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[], pos: number[],\n    transformOrigin: number[], origin: number[], n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirection = directions.filter(dir => dir === \"w\" || dir === \"e\")[0];\n        const horizontalDirection = directions.filter(dir => dir === \"n\" || dir === \"s\")[0];\n\n        dists[index] = dist;\n        controlPoses.forEach((controlPose, i) => {\n            const {\n                direction: controlDir,\n            } = controlPose;\n\n            if (!controlDir) {\n                return;\n            }\n            if (controlDir.indexOf(verticalDirection) > -1) {\n                dists[i][0] = dist[0];\n            }\n            if (controlDir.indexOf(horizontalDirection) > -1) {\n                dists[i][1] = dist[1];\n            }\n        });\n        if (verticalDirection) {\n            dists[1][0] = dist[0] / 2;\n            dists[5][0] = dist[0] / 2;\n        }\n        if (horizontalDirection) {\n            dists[3][1] = dist[1] / 2;\n            dists[7][1] = dist[1] / 2;\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function directionCondition(moveable: any, e: any) {\n    if (e.isRequest) {\n        if (e.requestAble === \"resizable\" || e.requestAble === \"scalable\") {\n            return e.parentDirection!;\n        } else {\n            return false;\n        }\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function getTransform(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefType | ArrayFormat<MoveableRefType>,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefType | ArrayFormat<MoveableRefType>,\n    isSelector?: boolean): Array<HTMLElement | SVGElement | string | null>;\nexport function getRefTargets(targets: MoveableRefType | ArrayFormat<MoveableRefType>, isSelector?: boolean) {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        prev.push(getRefTarget(target, isSelector));\n        return prev;\n    }, [] as Array<SVGElement | HTMLElement | string | null | undefined>);\n}\n\nexport function getElementTargets(\n    targets: Array<SVGElement | HTMLElement | string | null | undefined>,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n    targets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        elementTargets.push(target);\n    });\n\n    return elementTargets;\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n) {\n\n    const result = state.gesto!.move(delta, e.inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const draggableDatas = datas.draggable || (datas.draggable = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isDrag: true,\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: draggableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas.draggable) {\n            originalDatas.draggable = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n            this.isDrag = true;\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas.draggable,\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","import { Able, MoveableGroupInterface, MoveableManagerInterface } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto().dragStart(delta, ev);\n        } else {\n            if (!childMoveable.state.gesto) {\n                childMoveable.state.gesto = datas.childGestos[i];\n            }\n            childEvent = setCustomDrag(ev, childMoveable.state, delta, isPinch, isConvert);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gesto);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, getTransform, calculateMoveablePosition,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, average, findIndex } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport Draggable from \"../ables/Draggable\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n    const nextTransforms = originalDatas.nextTransforms;\n    const nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = 0;\n\n    if (index === -1) {\n        nextIndex = nextTransforms.length;\n        datas.transformIndex = nextIndex;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter((i: number) => i < index).length;\n    }\n\n    const result = getTransform(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else {\n        datas.isAppendTransform = true;\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, nextIndex];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(nextPoses.map(pos => pos[0])),\n        average(nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection(poses, direction.map(dir => -dir));\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n\n    originalDatas.nextTransforms = splitSpace(transform);\n}\n\nexport function getNextTransformText(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms.join(\" \");\n}\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n    return {\n        transform: nextTransform,\n        drag: Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, delta, isPinch, false),\n        ) as OnDrag,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    return getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    fixedPosition: number[],\n    datas: any,\n) {\n    const fixedDirection = getOriginDirection(moveable);\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { SnapElementRect } from \"src/react-moveable\";\nimport {\n    ElementGuidelineValue, MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnapGuideline, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculateInversePosition, calculatePosition,\n    getAbsolutePosesByState, getRect, getRefTarget,\n    roundSign,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThreshold: number,\n) {\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (Math.abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (Math.abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (Math.abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n            });\n        });\n    });\n    return gapGuidelines;\n}\nexport function getDefaultGuidelines(\n    horizontalGuidelines: number[] | false,\n    verticalGuidelines: number[] | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    horizontalGuidelines && horizontalGuidelines!.forEach(pos => {\n        guidelines.push({\n            type: \"horizontal\", pos: [\n                snapOffsetLeft,\n                throttle(pos - clientTop + snapOffsetTop, 0.1),\n            ], size: snapWidth,\n        });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(pos => {\n        guidelines.push({\n            type: \"vertical\", pos: [\n                throttle(pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ], size: snapHeight,\n        });\n    });\n    return guidelines;\n}\n\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft + distLeft,\n                right: elementRight + distLeft,\n                top: elementTop + distTop,\n                bottom: elementBottom + distTop,\n                center: (elementLeft + elementRight) / 2 + distLeft,\n                middle: (elementTop + elementBottom) / 2 + distTop,\n            },\n        };\n    });\n}\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return el;\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach(pos => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n        horizontal.forEach(pos => {\n            nextGuidelines.push({\n                type: \"horizontal\", element, pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ], size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const {\n        snapOffset,\n        containerClientRect: {\n            overflow,\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n            clientHeight: containerClientHeight,\n            clientWidth: containerClientWidth,\n            clientLeft,\n            clientTop,\n        },\n    } = moveable.state;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n    } = moveable.props;\n    const elementGuidelines = getElementGuidelines(moveable);\n    const totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    if (snapGap) {\n        const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n\n        totalGuidelines.push(...getGapGuidelines(\n            moveable,\n            { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 },\n            snapThreshold,\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    return totalGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        snapThreshold,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapThreshold?: number,\n) {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), 1);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    const fixedDirection = [-direction[0], -direction[1]];\n\n    if (direction[0] && direction[1]) {\n        directions.push(\n            [fixedDirection, [direction[0], -direction[1]]],\n            [fixedDirection, [-direction[0], direction[1]]]\n        );\n        if (keepRatio) {\n            // pass two direction condition\n            directions.push([fixedDirection, direction]);\n        }\n    } else if (direction[0]) {\n        // vertcal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [fixedDirection[0], -1]],\n                [fixedDirection, [fixedDirection[0], 1]],\n                [fixedDirection, [direction[0], -1]],\n                [fixedDirection, direction],\n                [fixedDirection, [direction[0], 1]]\n            );\n        } else {\n            directions.push(\n                [\n                    [fixedDirection[0], -1],\n                    [direction[0], -1],\n                ],\n                [\n                    [fixedDirection[0], 0],\n                    [direction[0], 0],\n                ],\n                [\n                    [fixedDirection[0], 1],\n                    [direction[0], 1],\n                ]\n            );\n        }\n    } else if (direction[1]) {\n        // horizontal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [-1, fixedDirection[1]]],\n                [fixedDirection, [1, fixedDirection[1]]],\n                [fixedDirection, [-1, direction[1]]],\n                [fixedDirection, [1, direction[1]]],\n                [fixedDirection, direction]\n            );\n        } else {\n            directions.push(\n                [\n                    [-1, fixedDirection[1]],\n                    [-1, direction[1]],\n                ],\n                [\n                    [0, fixedDirection[1]],\n                    [0, direction[1]],\n                ],\n                [\n                    [1, fixedDirection[1]],\n                    [1, direction[1]],\n                ]\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        directions.push(\n            [fixedDirection, [1, 0]],\n            [fixedDirection, [-1, 0]],\n            [fixedDirection, [0, -1]],\n            [fixedDirection, [0, 1]],\n\n            [\n                [1, 0],\n                [1, -1],\n            ],\n            [\n                [1, 0],\n                [1, 1],\n            ],\n            [\n                [0, 1],\n                [1, 1],\n            ],\n            [\n                [0, 1],\n                [-1, 1],\n            ],\n\n            [\n                [-1, 0],\n                [-1, -1],\n            ],\n            [\n                [-1, 0],\n                [-1, 1],\n            ],\n            [\n                [0, -1],\n                [1, -1],\n            ],\n            [\n                [0, -1],\n                [-1, -1],\n            ]\n        );\n    }\n\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], error: number = TINY_NUM) {\n    const centerSign = hitTestLine(dots[0], line) <= 0;\n\n    return dots.slice(1).every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    line: number[][],\n    center: number[],\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const {\n        horizontal: isHorizontalStart,\n        vertical: isVerticalStart,\n    } = isStartLine(center, line);\n\n    if (isSameStartLine([\n        center,\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n\n    // test vertical\n    const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart);\n    const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart);\n    const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n    const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    const dx1 = getTinyDist(dot2[0] - dot1[0]);\n\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        if (isRender && !dy1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dx1) {\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !dx1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dy1) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / (dy1 / dx1) + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lines: number[][][],\n    center: number[],\n    datas: any,\n) {\n    return lines.map(([multiple, pos1, pos2]) => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, [pos1, pos2], center);\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLines(poses, [0, 0], false).map(([sign, pos1, pos2]) => {\n        return [\n            sign.map(dir => Math.abs(dir) * 2),\n            pos1,\n            pos2,\n        ];\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport function getCheckInnerBoundLines(\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n) {\n    return getCheckSnapLineDirections(direction, keepRatio).map(([sign, dir1, dir2]) => {\n        return [\n            sign,\n            getPosByDirection(poses, dir1),\n            getPosByDirection(poses, dir2),\n        ];\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    const dots = [\n        center,\n        ...boundDots,\n    ];\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => !isSameStartLine(dots, line));\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    const lines = [\n        [pos1, pos2],\n        [pos2, pos4],\n        [pos4, pos3],\n        [pos3, pos1],\n    ];\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lines.forEach(line => {\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n) {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\")] : [],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n) {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number) => v,\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n) {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects, className }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right ) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(guideines, posesX, posesY, snapThreshold);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        const sizeOffset = solveNextOffset(\n            otherStartPos,\n            otherEndPos,\n            -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n            isVertical,\n            datas,\n        ).offset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    directionCondition,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n} from \"../utils\";\nimport {\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getPosByReverseDirection,\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLines,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    getTotalGuidelines,\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function snapStart(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n    const container = moveable.state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n            snapOffset.left = throttle(offset1[0], 0.1);\n            snapOffset.top = throttle(offset1[1], 0.1);\n            snapOffset.right = throttle(offset2[0], 0.1);\n            snapOffset.bottom = throttle(offset2[1], 0.1);\n        }\n    }\n\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedPos: number[],\n    direction: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextPos = getPosByReverseDirection(nextPoses, direction);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\n\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const directions = getCheckSnapDirections(direction, keepRatio);\n    const lines = getCheckInnerBoundLines(poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            lines,\n            getPosByDirection(poses, [0, 0]),\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const { pos1, pos2, pos3, pos4 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { allMatrix, is3d } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedPosition,\n                direction,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const { width, height, fixedPosition } = datas;\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const is3d = datas.is3d;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / width, heightOffset / height]),\n                ),\n                width,\n                height,\n                fixedPosition,\n                direction,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n\n    return [sizeDist[0] / width, sizeDist[1] / height];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: {\n        snappable: [Boolean, Array],\n        snapContainer: Object,\n\n        snapDirections: [Boolean, Object],\n        elementSnapDirections: [Boolean, Object],\n\n        snapGap: Boolean,\n        snapGridWidth: Number,\n        snapGridHeight: Number,\n        isDisplaySnapDigit: Boolean,\n        isDisplayInnerSnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, 1));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, 1));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects);\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        state.guidelines = getTotalGuidelines(moveable);\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries. (default: null)\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries. (default: null)\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: v => v,\n * });\n * moveable.snapDistFormat = v => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams, getComputedStyle,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            target,\n            gesto,\n        } = state;\n\n        if (gesto) {\n            return false;\n        }\n        state.gesto = parentGesto || moveable.targetGesto;\n        const style = getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n        datas.distOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.gesto = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue, distOffset } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n        distX += distOffset[0];\n        distY += distOffset[1];\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n            distOffset,\n        } = e.datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            distOffset[0] = deltaOffset[0];\n            distOffset[1] = deltaOffset[1];\n            return this.drag(moveable, e);\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.gesto = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false);\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDelta } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false);\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import { prefix, getControlTransform, getLineStyle } from \"./utils\";\nimport { Renderer, MoveableManagerInterface, RenderDirections } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS } from \"./consts\";\nimport { IObject, throttle, getRad } from \"@daybrush/utils\";\n\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    React: Renderer,\n    additionalClassName: string = \"\",\n): any[] {\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n        zoom,\n    } = moveable.props;\n\n    const directionMap: IObject<boolean> = {};\n\n    if (!directions) {\n        return [];\n    }\n    const sign = (direction > 0 ? 1 : -1);\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n    const degRotation = rotationRad / Math.PI * 180;\n\n    renderDirections.forEach(dir => {\n        directionMap[dir] = true;\n    });\n    return renderDirections.map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, additionalClassName)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderLine(\n    React: Renderer, direction: string,\n    pos1: number[], pos2: number[],\n    zoom: number,\n    key: number | string, ...classNames: string[]) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${key}`} className={prefix(\"line\", \"direction\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-index={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getOriginDirection,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n} from \"../gesto/GestoUtils\";\nimport { renderDirectionControls } from \"../renderDirections\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = calculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.prevSnapDeg = datas.prevDeg;\n    datas.startDeg = datas.prevDeg;\n    datas.loop = 0;\n}\nfunction getParentDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    parentDist: number,\n    direction: number,\n    startValue: number,\n) {\n    const {\n        prevDeg,\n    } = datas;\n\n    // const absoluteDeg = startValue + parentDist;\n    const dist = checkSnapRotate(\n        moveable,\n        moveableRect,\n        datas.origin,\n        parentDist,\n    );\n    datas.prevDeg = dist;\n\n    const delta = dist - prevDeg;\n\n    return [delta, dist, startValue + dist];\n}\nfunction getDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    deg: number,\n    direction: number,\n    startValue: number,\n    throttleRotate: number,\n    isSnap?: boolean,\n) {\n    const {\n        prevDeg,\n        prevSnapDeg,\n        startDeg,\n        loop: prevLoop,\n    } = datas;\n\n    if (prevDeg > deg && prevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++datas.loop;\n    } else if (prevDeg < deg && prevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --datas.loop;\n    }\n    const loop = datas.loop;\n    const absolutePrevSnapDeg = prevLoop * 360 + prevSnapDeg - startDeg + startValue;\n    let absoluteDeg = loop * 360 + deg - startDeg + startValue;\n\n    datas.prevDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    absoluteDeg = throttle(absoluteDeg, throttleRotate);\n    let dist = direction * (absoluteDeg - startValue);\n    if (isSnap) {\n        dist = checkSnapRotate(moveable, moveableRect, datas.origin, dist);\n        absoluteDeg = dist / direction + startValue;\n    }\n    datas.prevSnapDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    const delta = direction * (absoluteDeg - absolutePrevSnapDeg);\n\n    return [delta, dist, startValue + dist];\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    direction: number,\n    clientX: number, clientY: number,\n    startValue: number,\n    throttleRotate: number,\n) {\n    return getDeg(\n        moveable,\n        moveableRect,\n        datas,\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        startValue,\n        throttleRotate,\n        true,\n    );\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n) {\n    if (rotationPosition === \"none\") {\n        return;\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    // if (scale[0] < 0) {\n    //     dir1 = getReversePositionX(dir1);\n    //     dir2 = getReversePositionX(dir2);\n    // }\n    // if (scale[1] < 0) {\n    //     dir1 = getReversePositionY(dir1);\n    //     dir2 = getReversePositionY(dir2);\n    // }\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [pos, rad] as const;\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (hasClass(target, prefix(\"rotation-control\"))) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [\n        `.rotation {\n            position: absolute;\n            height: 40px;\n            width: 1px;\n            transform-origin: 50% 100%;\n            height: calc(40px * var(--zoom));\n            top: auto;\n            left: 0;\n            bottom: 100%;\n            will-change: transform;\n        }\n        .rotation .rotation-line {\n            display: block;\n            width: 100%;\n            height: 100%;\n            transform-origin: 50% 50%;\n        }\n        .rotation .rotation-control {\n            border-color: #4af;\n            border-color: var(--moveable-color);\n            background:#fff;\n            cursor: alias;\n        }`,\n    ],\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n        } = moveable.props;\n        const {\n            renderPoses,\n            direction,\n        } = moveable.state;\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n\n        const jsxs = [];\n\n        if (positions) {\n            const [pos, rad] = positions;\n            jsxs.push(\n                <div key=\"rotation\" className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        }\n        if (renderDirections) {\n            jsxs.push(...renderDirectionControls(moveable, [], React));\n        }\n\n\n        return jsxs;\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        datas.fixedPosition = getDirectionOffset(moveable, getOriginDirection(moveable));\n        datas.absoluteInfo = {\n            origin: rect.origin,\n            startValue: rect.rotation,\n        };\n        setRotateStartInfo(moveable, datas.absoluteInfo, clientX, clientY, origin, moveableClientRect);\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n            datas.afterInfo = {\n                origin: rect.origin,\n                prevDeg: externalRotate, startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, moveableClientRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, moveableClientRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart | false,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            throttleRotate = 0,\n            parentMoveable,\n        } = moveable.props;\n\n        let delta: number;\n        let dist: number;\n        let rotate: number;\n\n        let beforeDelta: number;\n        let beforeDist: number;\n        let beforeRotate: number;\n\n        let absoluteDelta: number;\n        let absoluteDist: number;\n        let absoluteRotate: number;\n\n        const startDeg = 180 / Math.PI * startValue;\n        const absoluteStartDeg = absoluteInfo.startValue;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            [delta, dist, rotate]\n                = getParentDeg(moveable, rect, afterInfo, parentDist, direction, startDeg);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getParentDeg(moveable, rect, beforeInfo, parentDist, beforeDirection, startDeg);\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getParentDeg(moveable, rect, absoluteInfo, parentDist, direction, absoluteStartDeg);\n        } else if (isPinch || parentFlag) {\n            [delta, dist, rotate]\n                = getDeg(moveable, rect, afterInfo, parentRotate, direction, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getDeg(moveable, rect, beforeInfo, parentRotate, beforeDirection, startDeg, throttleRotate);\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getDeg(moveable, rect, absoluteInfo, parentRotate, direction, absoluteStartDeg, throttleRotate);\n        } else {\n            [delta, dist, rotate]\n                = getRotateInfo(moveable, rect, afterInfo, direction, clientX, clientY, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate] = getRotateInfo(\n                moveable, rect, beforeInfo, beforeDirection, clientX, clientY,\n                startDeg, throttleRotate,\n            );\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getRotateInfo(\n                    moveable, rect, absoluteInfo, direction, clientX, clientY,\n                    absoluteStartDeg, throttleRotate,\n                );\n        }\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotate}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas.fixedPosition, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate,\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [prevX, prevY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad * direction);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                ev.datas.groupClient = [clientX, clientY];\n\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotate;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set: (rotation: number) => {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    getDirection, triggerEvent,\n    fillParams, getCSSSize,\n    getDistSize, fillEndParams, directionCondition,\n    getComputedStyle,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getDragDist,\n    getResizeDist,\n    getAbsolutePosition,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n} from \"../types\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize, IObject,\n    isString, getRad, convertUnitSize,\n    throttle,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            parentDirection,\n            datas,\n            parentFlag,\n        } = e;\n\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target);\n        const padding = [Math.max(0, width - datas.startWidth), Math.max(0, height - datas.startHeight)];\n        datas.minSize = padding;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!parentFlag) {\n            const style = getComputedStyle(target);\n\n            const {\n                position,\n                minWidth,\n                minHeight,\n                maxWidth,\n                maxHeight,\n            } = style;\n            const isParentElement = position === \"static\" || position === \"relative\";\n            const container = isParentElement\n                ? target.parentElement\n                : (target as HTMLElement).offsetParent;\n\n            let containerWidth = width;\n            let containerHeight = height;\n\n            if (container) {\n                containerWidth = container!.clientWidth;\n                containerHeight = container!.clientHeight;\n\n                if (isParentElement) {\n                    const containerStyle = getComputedStyle(container!);\n\n                    containerWidth -= parseFloat(containerStyle.paddingLeft) || 0;\n                    containerHeight -= parseFloat(containerStyle.paddingTop) || 0;\n                }\n            }\n\n            datas.minSize = plus([\n                convertUnitSize(minWidth, containerWidth) || 0,\n                convertUnitSize(minHeight, containerHeight) || 0,\n            ], padding);\n            datas.maxSize = plus([\n                convertUnitSize(maxWidth, containerWidth) || Infinity,\n                convertUnitSize(maxHeight, containerHeight) || Infinity,\n            ], padding);\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getAbsolutePosition(moveable, fixedDirection);\n        }\n\n        setRatio(width / height);\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin: (minSize: number[]) => {\n                datas.minSize = minSize;\n            },\n            setMax: (maxSize: number[]) => {\n                datas.maxSize = [\n                    maxSize[0] || Infinity,\n                    maxSize[1] || Infinity,\n                ];\n            },\n            setRatio,\n            setFixedDirection,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            distX, distY,\n            parentFlag, isPinch,\n            parentDistance, parentScale,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            fixedDirection,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            isWidth,\n            startOffsetWidth,\n            startOffsetHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            throttleResize = 0,\n            parentMoveable,\n            snapThreshold = 5,\n        } = moveable.props;\n        let direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = ratio && (moveable.props.keepRatio || parentKeepRatio);\n        let fixedPosition = dragClient;\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            distWidth = parentDist[0];\n            distHeight = parentDist[1];\n\n            if (keepRatio) {\n                if (!distWidth) {\n                    distWidth = distHeight * ratio;\n                } else if (!distHeight) {\n                    distHeight = distWidth / ratio;\n                }\n            }\n        } else if (parentScale) {\n            distWidth = (parentScale[0] - 1) * startOffsetWidth;\n            distHeight = (parentScale[1] - 1) * startOffsetHeight;\n        } else if (isPinch) {\n            if (parentDistance) {\n                distWidth = parentDistance;\n                distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n\n            distWidth = sizeDirection[0] * dist[0];\n            distHeight = sizeDirection[1] * dist[1];\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = distHeight / ratio;\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = distWidth * ratio;\n                } else {\n                    // two-way\n                    const startWidthSize = sizeDirection[0] * 2 * startOffsetWidth;\n                    const startHeightSize = sizeDirection[1] * 2 * startOffsetHeight;\n                    const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                        - getDistSize([startWidthSize, startHeightSize]);\n                    const ratioRad = getRad([0, 0], [ratio, 1]);\n\n                    distWidth = Math.cos(ratioRad) * distSize;\n                    distHeight = Math.sin(ratioRad) * distSize;\n                }\n            } else if (!keepRatio) {\n                const nextDirection = [...direction];\n\n                if (!startOffsetWidth) {\n                    if (dist[0] < 0) {\n                        nextDirection[0] = -1;\n                    } else if (dist[0] > 0) {\n                        nextDirection[0] = 1;\n                    }\n                }\n                if (!startOffsetHeight) {\n                    if (dist[1] < 0) {\n                        nextDirection[1] = -1;\n                    } else if (dist[1] > 0) {\n                        nextDirection[1] = 1;\n                    }\n                }\n                direction = nextDirection;\n                sizeDirection = nextDirection;\n                distWidth = sizeDirection[0] * dist[0];\n                distHeight = sizeDirection[1] * dist[1];\n            }\n        }\n        let nextWidth = sizeDirection[0] || keepRatio\n            ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n        let nextHeight = sizeDirection[1] || keepRatio\n            ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n        if (keepRatio && startOffsetWidth && startOffsetHeight) {\n            // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n            if (isWidth) {\n                nextHeight = nextWidth / ratio;\n            } else {\n                nextWidth = nextHeight * ratio;\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable, nextWidth,\n                nextHeight, direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nextWidth = throttle(nextWidth, throttleResize!);\n                } else {\n                    nextHeight = throttle(nextHeight, throttleResize!);\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nextWidth += snapDist[0];\n                nextHeight = nextWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nextHeight += snapDist[1];\n                nextWidth = nextHeight * ratio;\n            }\n        } else {\n            if (startOffsetWidth + distWidth < -snapThreshold) {\n                snapDist[0] = 0;\n            }\n            if (startOffsetWidth + distHeight < -snapThreshold) {\n                snapDist[1] = 0;\n            }\n            nextWidth += snapDist[0];\n            nextHeight += snapDist[1];\n            if (!snapDist[0]) {\n                nextWidth = throttle(nextWidth, throttleResize!);\n            }\n            if (!snapDist[1]) {\n                nextHeight = throttle(nextHeight, throttleResize!);\n            }\n        }\n        [nextWidth, nextHeight] = calculateBoundSize(\n            [nextWidth, nextHeight],\n            minSize,\n            maxSize,\n            keepRatio,\n        );\n        nextWidth = Math.round(nextWidth);\n        nextHeight = Math.round(nextHeight);\n        distWidth = nextWidth - startOffsetWidth;\n        distHeight = nextHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            nextWidth, nextHeight,\n            fixedDirection, fixedPosition,\n            transformOrigin,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: nextWidth,\n            offsetHeight: nextHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent<ResizableProps>(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        triggerEvent<ResizableProps>(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const pos = getAbsolutePosition(child, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection(fixedDirection: number[]) {\n                params.setFixedDirection(fixedDirection);\n                events.forEach((ev, i) => {\n                    ev.setFixedDirection(fixedDirection);\n                    setDist(moveable.moveables[i], originalEvents[i]);\n                });\n            },\n        };\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            offsetWidth, offsetHeight, dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            offsetWidth / (offsetWidth - dist[0]),\n            offsetHeight / (offsetHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to resize\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.offsetWidth] - offset number of width\n     * @param {number} [e.offsetHeight] - offset number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can be resized. (default: false)\n * @name Moveable.Resizable#resizable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize.\n * @name Moveable.Resizable#throttleResize\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 0,\n * });\n *\n * moveable.throttleResize = 1;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Resizable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Resizable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    getDirection, triggerEvent, multiply2,\n    fillParams, getDistSize, fillEndParams, directionCondition,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, getDragDist,\n    resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n} from \"../gesto/GestoUtils\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getRad, getDist,\n    throttle,\n} from \"@daybrush/utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps>>,\n        React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.width = width;\n        datas.height = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getAbsolutePosition(moveable, fixedDirection);\n        }\n\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent<ScalableProps, \"onScaleStart\">(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas, distX, distY,\n            parentScale,\n            parentDistance,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            width,\n            height,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n            fixedDirection,\n            scaleXRatio,\n            scaleYRatio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const {\n            throttleScale,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = ratio && (moveable.props.keepRatio || parentKeepRatio);\n        const state = moveable.state;\n\n        let scaleX = 1;\n        let scaleY = 1;\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            scaleX = (width + parentDist[0]) / width;\n            scaleY = (height + parentDist[1]) / height;\n        } else if (parentScale) {\n            scaleX = parentScale[0];\n            scaleY = parentScale[1];\n        } else if (isPinch) {\n            if (parentDistance) {\n                scaleX = (width + parentDistance) / width;\n                scaleY = (height + parentDistance * height / width) / height;\n            }\n        } else {\n            const dragDist = getDragDist({ datas, distX, distY });\n            let distScaleWidth = sizeDirection[0] * dragDist[0] * scaleXRatio;\n            let distScaleHeight = sizeDirection[1] * dragDist[1] * scaleYRatio;\n\n            if (keepRatio && width && height) {\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    // distHeight = signSize;\n                    distScaleWidth = distScaleHeight * ratio;\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    // distWidth = signSize;\n                    distScaleHeight = distScaleWidth / ratio;\n                } else {\n                    const size = getDistSize([distScaleWidth, distScaleHeight]);\n\n                    // two-way\n                    const dragRad = getRad([0, 0], dragDist);\n                    const standardRad = getRad([0, 0], sizeDirection);\n                    const signSize = Math.cos(dragRad - standardRad) * size;\n                    const ratioRad = getRad([0, 0], [ratio, 1]);\n\n                    distScaleWidth = Math.cos(ratioRad) * signSize;\n                    distScaleHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n            scaleX = (width + (distScaleWidth / scaleXRatio)) / width;\n            scaleY = (height + (distScaleHeight / scaleYRatio)) / height;\n        }\n\n        scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n        scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n        if (scaleX === 0) {\n            scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (scaleY === 0) {\n            scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n\n        const dist = [scaleX / startValue[0], scaleY / startValue[1]];\n        let scale = [scaleX, scaleY];\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * width) > Math.abs(snapDist[1] * height)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = width * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / height / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = height * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / width / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, fixedDirection, fixedPosition, datas);\n\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scaleX === prevDist[0] && scaleY === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: width,\n            offsetHeight: height,\n            direction,\n\n            // beforeScale,\n            // beforeDist,\n            // beforeDelta,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillEndParams<OnScaleEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const pos = getAbsolutePosition(child, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection(fixedDirection: number[]) {\n                params.setFixedDirection(fixedDirection);\n                events.forEach((ev, i) => {\n                    ev.setFixedDirection(fixedDirection);\n                    setDist(moveable.moveables[i], originalEvents[i]);\n                });\n            },\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to scale\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled. (default: false)\n * @name Moveable.Scalable#scalable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.state;\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport { ScrollableProps, OnScroll, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        useResizeObserver: Boolean,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        hideDefaultLines: Boolean,\n        props: Object,\n    } as const,\n    events: {} as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.state;\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area. (default: null)\n * @name Moveable#padding\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    poses: number[][], controlPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const raws = poses.map((pos, i) => {\n        const { horizontal, vertical } = controlPoses[i];\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = wnValue,\n        esValue = wnValue,\n        wsValue = enValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width);\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width);\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio([verticalPoses[0], verticalPoses[3]], height);\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio([verticalPoses[1], verticalPoses[2]], height);\n\n    const nextHorizontalPoses\n        = horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValues.length));\n    const nextVerticalPoses\n        = verticalPoses.slice(0, Math.max(minCounts[1], verticalValues.length));\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { splitBracket, splitComma, splitUnit, splitSpace, convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    convertCSSSize, moveControlPos,\n    getComputedStyle,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    getRadiusValues,\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, getRadiusStyles, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/utils\";\n\n\nconst CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\nconst CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                poses.slice(8),\n                clipPoses.slice(8),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\nfunction getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\nfunction getClipPath(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(index, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(index);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(index);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(index, 1);\n        poses.splice(index, 1);\n    } else if (clipType === \"inset\") {\n        if (index < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, index, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath, defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.state;\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.index = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, index, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        let [distX, distY] = getDragDist(e);\n        const props = moveable.props;\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[index].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[index];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, index, dist, isRect);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n\n        for (let i = 0; i < 2; ++i) {\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkSnapBounds(\n                guidelines,\n                props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n                guideXPoses,\n                guideYPoses,\n                5,\n            );\n            const snapOffsetY = horizontalSnapInfo.offset;\n            const snapOffsetX = verticalSnapInfo.offset;\n\n            if (horizontalSnapInfo.isBound) {\n                boundDelta[1] += snapOffsetY;\n            }\n            if (verticalSnapInfo.isBound) {\n                boundDelta[0] += snapOffsetX;\n            }\n            if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n                const guideRect = getRect(nextPoses);\n                let cy = guideRect.bottom - guideRect.top;\n                let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n                const distSnapX = verticalSnapInfo.isBound\n                    ? Math.abs(snapOffsetX)\n                    : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n                const distSnapY = horizontalSnapInfo.isBound\n                    ? Math.abs(snapOffsetY)\n                    : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n                cx -= distSnapX;\n                cy -= distSnapY;\n\n                if (isCircle) {\n                    cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                    cx = cy;\n                }\n                const center = guidePoses[0];\n\n                guidePoses[1][1] = center[1] - cy;\n                guidePoses[2][0] = center[0] + cx;\n                guidePoses[3][1] = center[1] + cy;\n                guidePoses[4][0] = center[0] - cx;\n            } else {\n                guidePoses.forEach((pos, j) => {\n                    const dist = dists[j];\n\n                    if (dist[0]) {\n                        pos[0] -= snapOffsetX;\n                    }\n                    if (dist[1]) {\n                        pos[1] -= snapOffsetY;\n                    }\n                });\n                break;\n            }\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n        );\n\n        if (originalDatas.draggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            [boundDelta[0], boundDelta[1]] = multiply(allMatrix, [boundDelta[0], boundDelta[1], 0, 0], n);\n            originalDatas.draggable.deltaOffset = boundDelta;\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea. (default: false)\n * @name Moveable.Clippable#clipArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target. (default: false)\n* @name Moveable.Clippable#clipTargetBounds\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* Add clip guidelines in the vertical direction. (default: [])\n* @name Moveable.Clippable#clipVerticalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction. (default: [])\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines. (default: 5)\n* @name Moveable.Clippable#clipSnapThreshold\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<OriginDraggableProps>(\n            moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    getComputedStyle,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart, RoundableState, OnRound, ControlPose, OnRoundEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues, getRadiusStyles, removeRadiusPos,\n    addRadiusPos, splitRadiusPoses,\n} from \"./roundable/borderRadius\";\n\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n    width: number,\n    height: number,\n) {\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses);\n    const horizontalsLength = horizontals.length;\n    const verticalsLength = verticals.length;\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 left\n    // 3 bottom\n\n    // 0 top - left\n    // 1 top - right\n    // 2 bottom - right\n    // 3 bottom - left\n    // 0 left - top\n    // 1 right - top\n    // 2 right - bottom\n    // 3 left - bottom\n    let horizontalIndex = -1;\n    let verticalIndex = -1;\n\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            horizontalIndex = 0;\n        } else if (horizontalsLength === 1) {\n            horizontalIndex = 1;\n        }\n    } else if (lineIndex === 3) {\n        if (horizontalsLength <= 2) {\n            horizontalIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            horizontalIndex = 3;\n        }\n    }\n    if (lineIndex === 2) {\n        if (verticalsLength === 0) {\n            verticalIndex = 0;\n        } else if (verticalsLength < 4) {\n            verticalIndex = 3;\n        }\n    } else if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            verticalIndex = 1;\n        } else if (verticalsLength <= 2) {\n            verticalIndex = 2;\n        }\n    }\n\n    addRadiusPos(\n        controlPoses, poses, 0,\n        horizontalIndex, verticalIndex,\n        distX, distY, width, height,\n    );\n}\nfunction getBorderRadius(\n    target: HTMLElement | SVGElement,\n    width: number, height: number,\n    minCounts: number[] = [0, 0],\n    state?: string,\n) {\n    let borderRadius: string;\n    let values: string[] = [];\n\n    if (!state) {\n        const style = getComputedStyle(target);\n\n        borderRadius = (style && style.borderRadius) || \"\";\n    } else {\n        borderRadius = state;\n    }\n    if (!borderRadius || (!state && borderRadius === \"0px\")) {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    controlPoses: ControlPose[],\n    nextPoses: number[][],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n    } = getRadiusStyles(\n        nextPoses,\n        controlPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    triggerEvent<RoundableProps>(moveable, \"onRound\", fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n    }));\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n}`,\n        `:host[data-able-roundable] .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.state;\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            target, width, height, minRoundControls, borderRadiusState);\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n\n        return radiusValues.map((v, i) => {\n            horizontalCount += Math.abs(v.horizontal);\n            verticalCount += Math.abs(v.vertical);\n            const pos = minus(calculatePosition(allMatrix, v.pos, n), [left, top]);\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1]\n                : horizontalCount <= maxRoundControls[0];\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\"control\", \"border-radius\")}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        const lineIndex = isLine ? parseInt(inputTarget.getAttribute(\"data-line-index\"), 10) : -1;\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const result = triggerEvent<RoundableProps>(\n            moveable, \"onRoundStart\", fillParams<OnRoundStart>(moveable, e, {}));\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            target,\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const controlPoses = getBorderRadius(target!, width, height, minRoundControls) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses.map(pos => pos.pos), controlPoses, roundRelative!, width, height).styles.join(\" \");\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRound || !datas.isControl || !datas.controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((pos, i) => plus(pos.pos, dists[i]));\n\n        datas.prevDist = [distX, distY];\n\n        triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            controlPoses,\n            nextPoses,\n        );\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            width,\n            height,\n        } = state;\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const poses = controlPoses.map(pos => pos.pos);\n        const length = poses.length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl) {\n                removeRadiusPos(controlPoses, poses, controlIndex, 0);\n            } else if (isLine) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height);\n            }\n            if (length !== controlPoses.length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                    poses,\n                );\n            }\n        }\n        triggerEvent<RoundableProps>(moveable, \"onRoundEnd\",\n            fillEndParams<OnRoundEnd>(moveable, e, {}));\n        state.borderRadiusState = \"\";\n        return true;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * @property - Whether you can add/delete round controls by double-clicking a line or control. (default: true)\n * @name Moveable.Roundable#roundClickable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const value = is3d ? `matrix3d(${createIdentityMatrix(4)}` : `matrix(${createIdentityMatrix(3)})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetTransform(e: any) {\n        e.datas.nextTransforms = e.datas.startTransforms;\n        e.datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetTransform(e);\n\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetTransform(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { getNextTransformText } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        if (e.resultCount) {\n            return this.drag(moveable, e);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transform: getNextTransformText(e),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist } from \"../utils\";\nimport Gesto from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isRequest) {\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [...(moveable as any)[ableType]];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length) {\n        return false;\n    }\n    const eventAbles: Able[] = [BeforeRenderable, ...ables, Renderable].filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let resultCount = 0;\n    const results = eventAbles.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            const result = able[eventName](moveable, {\n                ...e,\n                resultCount,\n                datas: nextDatas,\n                originalDatas: datas,\n                inputTarget,\n            });\n\n            if (isStart && result === false) {\n                nextDatas.isEventStart = false;\n            }\n            resultCount += result ? 1 : 0;\n            return result;\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    let isForceEnd = false;\n\n    // end ables\n    if (isStart && eventAbles.length && !isUpdate) {\n        isForceEnd = eventAbles.filter(able => {\n            const ableName = able.name;\n            const nextDatas = datas[ableName];\n\n            if (nextDatas.isEventStart) {\n                if (able.dragRelation === \"strong\") {\n                    // cancel drag\n                    nextDatas.isEventStart = false;\n\n                    return false;\n                }\n                // start drag\n                return true;\n            }\n            // cancel event\n            return false;\n        }).length === 0;\n    }\n    if (isEnd || isForceEnd) {\n        moveable.state.gesto = null;\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gesto = null;\n            });\n        }\n    }\n    if (isFirstStart && isForceEnd) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isRequest && isUpdate) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        moveable.updateRect(isEnd ? eventType : \"\", true, false);\n        moveable.forceUpdate();\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || moveable.props.dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    const startFunc = (e: any) => {\n        const eventTarget = e.inputEvent.target;\n        const areaElement = moveable.areaElement;\n\n        return eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\");\n    };\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: startFunc,\n        pinchStart: startFunc,\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const {\n        pinchOutside,\n        pinchThreshold,\n    } = moveable.props;\n    const options: IObject<any> = {\n        preventDefault: false,\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n    };\n    const gesto = new Gesto(target!, options);\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        this.target!.addEventListener(this.eventName.toLowerCase(), this.onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this.onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    getTargetInfo,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport { cancelAnimationFrame, getKeys, IObject, removeEvent, requestAnimationFrame } from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        parentPosition: null,\n        portalContainer: null,\n        useResizeObserver: false,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gesto: null,\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        ...getTargetInfo(null),\n    };\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isUnmounted = false;\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _prevTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _prevDragArea = false;\n\n    private _observer: ResizeObserver | null = null;\n    private _observerId = 0;\n\n    public render() {\n        const props = this.props;\n        const state = this.state;\n        const {\n            parentPosition, className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n        } = props;\n\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const { left, top, target: stateTarget, direction } = state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1\n                    ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${className}`}\n                {...ableAttributes}\n                onClick={this.onPreventClick}\n                portalContainer={portalContainer}\n                style={{\n                    \"position\": \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate3d(${left - parentLeft}px, ${top - parentTop}px, ${translateZ})`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n\n        if (!container && !parentMoveable && !wrapperMoveable) {\n            this.updateRect(\"\", false, true);\n        }\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._updateNativeEvents();\n        this._updateEvents();\n        this._updateTargets();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        if (this.targetGesto) {\n            this.targetGesto.triggerDragStart(e);\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(this.controlBox && this.controlBox.getElement(),\n                target, container, container,\n                rootContainer || container,\n                // isTarget ? state : undefined\n            ),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging() {\n        return (this.targetGesto ? this.targetGesto.isFlag() : false)\n            || (this.controlGesto ? this.controlGesto.isFlag() : false);\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.state;\n        const props = this.props;\n        const {\n            originalBeforeOrigin, transformOrigin,\n            allMatrix, is3d, pos1, pos2, pos3, pos4,\n            left: stateLeft, top: stateTop,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n        const absoluteOrigin = (props as any).groupable\n            ? originalBeforeOrigin : plus(originalBeforeOrigin, [stateLeft, stateTop]);\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public onPreventClick = (e: any) => {\n        e.stopPropagation();\n        removeEvent(window, \"click\", this.onPreventClick, true);\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as MoveableManager).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        return ables.filter(able => able && props[able.name]);\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n            this._observer?.disconnect();\n            return;\n        }\n\n\n        if (prevProps.target === target && this._observer) {\n            return;\n        }\n\n        const observer = new ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._observer = observer;\n\n        return;\n    }\n    protected _updateEvents() {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevTarget = props.dragTarget || props.target;\n        this._prevDragArea = props.dragArea!;\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            edge,\n            zoom,\n            hideDefaultLines,\n        } = props;\n\n        if (hideDefaultLines) {\n            return [];\n        }\n        const renderPoses = this.state.renderPoses;\n        const Renderer = {\n            createElement,\n        };\n        return [\n            renderLine(Renderer, edge ? \"n\" : \"\", renderPoses[0], renderPoses[1], zoom!, 0),\n            renderLine(Renderer, edge ? \"e\" : \"\", renderPoses[1], renderPoses[3], zoom!, 1),\n            renderLine(Renderer, edge ? \"w\" : \"\", renderPoses[0], renderPoses[2], zoom!, 2),\n            renderLine(Renderer, edge ? \"s\" : \"\", renderPoses[2], renderPoses[3], zoom!, 3),\n        ];\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = this._prevTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isTargetChanged || isDragAreaChanged;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#zoom\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer, MoveableGroupInterface } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n        const props = moveable.props;\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                cssStyled={props.cssStyled}\n                customStyledMap={props.customStyledMap}\n                useResizeObserver={props.useResizeObserver}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { addEvent, findIndex, removeEvent, requestAnimationFrame } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: {\n        clickable: Boolean,\n    },\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        if (!e.isRequest) {\n            addEvent(window, \"click\", moveable.onPreventClick, true);\n        }\n    },\n    dragControlStart(moveable: MoveableManagerInterface, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragStart(moveable, e);\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.endEvent(moveable);\n        const target = moveable.state.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n\n        if (!e.isDrag || containsElement) {\n\n            this.unset(moveable);\n        }\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent<ClickableProps>(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        this.endEvent(moveable);\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent<ClickableProps>(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    endEvent(moveable: MoveableManagerInterface<ClickableProps>) {\n        requestAnimationFrame(() => {\n            this.unset(moveable);\n        });\n    },\n    unset(moveable: MoveableManagerInterface<ClickableProps>) {\n        removeEvent(window, \"click\", moveable.onPreventClick, true);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    dragControlCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    dragControl(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable, Rotatable,\n    Resizable, Scalable, Warpable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...(\"events\" in able ? able.events : {})};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, getAbsolutePosesByState, equals, unset } from \"./utils\";\nimport { minus, plus, rotate } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { throttle } from \"@daybrush/utils\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1MinMax = [MIN_NUM, MAX_NUM];\n        const b2MinMax = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // b = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1MinMax[0] = Math.max(b1MinMax[0], b1);\n                b1MinMax[1] = Math.min(b1MinMax[1], b1);\n                b2MinMax[0] = Math.max(b2MinMax[0], b2);\n                b2MinMax[1] = Math.min(b2MinMax[1], b2);\n            });\n        });\n\n        b1MinMax.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2MinMax.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n\n        }\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        const transform = `rotate(${rotation}deg) scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        target.style.cssText += `left:0px;top:0px; transform-origin: ${this.transformOrigin}; width:${width}px; height:${height}px;`\n            + `transform:${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container,\n            // state,\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        info.left = left - info.left! + delta[0];\n        info.top = top - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        // info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n\n        const clientRect = info.targetClientRect!;\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        clientRect.top += info.top - state.top;\n        clientRect.left += info.left - state.left;\n\n        target.style.transform = `translate(${-delta[0]}px, ${-delta[1]}px) ${transform}`;\n\n        this.updateState(\n            {\n                ...info,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._prevTarget = this.props.dragTarget || this.areaElement;\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = this._prevTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n\n        if (!state.target) {\n            state.target = this.areaElement;\n\n            this.controlBox.getElement().style.display = \"block\";\n            this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    protected _updateObserver() {}\n}\n\n/**\n * Sets the initial rotation of the group. (default 0)\n * @name Moveable.Group#defaultGroupRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group. (default 0)\n * @name Moveable.Group#defaultGroupOrigin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            targets,\n        } = this.props;\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { getKeys, IObject, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets, getElementTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\n\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: Array<HTMLElement | SVGElement | string | undefined | null> = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        const isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets} />;\n            }\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}  />;\n        } else {\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={elementTargets[0]} />;\n        }\n    }\n    public componentDidMount() {\n        this._updateRefs();\n    }\n    public componentDidUpdate() {\n        this._updateRefs();\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n            const nextTarget = nextRefTargets[i];\n\n            if (!target && !nextTarget) {\n                return false;\n            } else if (target !== nextTarget) {\n                return true;\n            }\n            return false;\n        });\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n        this.refTargets.forEach(target => {\n            if (isString(target)) {\n                if (!selectorMap[target] && isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                } else {\n                    nextSelectorMap[target] = selectorMap[target];\n                }\n            }\n        });\n\n        this.refTargets = nextRefTargets;\n        this.selectorMap = nextSelectorMap;\n\n        if (!isRender && isUpdate) {\n            this.forceUpdate();\n        }\n        return nextRefTargets;\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(state?: any, callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n","import Moveable, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Moveable as any)[name] = (others as any)[name];\n}\nexport default Moveable;\n"],"names":["makeAble","name","able","__assign","events","props","_a","Boolean","getSVGCursor","scale","degree","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","MOVEABLE_METHODS","multiply2","pos1","pos2","prefix","_i","classNames","prefixNames","getTransformMatrix","transform","isObject","value","splitBracket","split","v","getAbsoluteMatrix","matrix","origin","multiplies","createOriginMatrix","a","measureSVGSize","el","unit","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","i","splitUnit","style","transformOrigin","getOffsetInfo","lastParent","isParent","body","document","target","parentElement","isEnd","position","tagName","isStatic","offsetParent","getOffsetPosInfo","container","isFixed","offsetLeft","offsetTop","containerClientRect","documentElement","getBoundingClientRect","left","top","isSVG","isUndefined","hasOffset","targetOrigin","pos","slice","getSVGGraphicsOffset","offset","getBodyOffset","bodyStyle","bodyPosition","marginLeft","parseInt","marginTop","bottom","right","convert3DMatrixes","matrixes","forEach","info","convertDimension","getMatrixStackInfo","checkContainer","requestEnd","is3d","targetTransformOrigin","targetMatrix","offsetContainer","convertCSStoMatrix","length","offsetPos","push","type","getSVGMatrix","createIdentityMatrix","_b","isOffsetEnd","parentClientLeft","parentClientTop","clientLeft","clientTop","margin","scrollLeft","scrollTop","calculateElementInfo","rootContainer","isAbsolute3d","width","height","rotation","allResult","offsetWidth","offsetHeight","getSize","result","calculateMatrixStack","calculateMoveablePosition","allMatrix","rotationPosition","getRotationRad","direction","rootMatrix","beforeMatrix","offsetMatrix","targetTransform","pos3","pos4","getElementInfo","prevTargetMatrix","_c","rootMatrixes","isRoot3d","isNext3d","isSVGGraphicElement","reverse","multiply","originalRootContainer","endContainer","rootMatrixBeforeOffset","reduce","nextInfo","getSVGOffset","isMatrix3d","makeMatrixCSS","ignoreDimension","convertMatrixtoCSS","clientWidth","clientHeight","x","y","baseVal","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","scaleMatrix","createScaleMatrix","getBBox","bbox","calculatePosition","calculate","convertPositionMatrix","calculatePoses","getRect","poses","posesX","posesY","rectWidth","rectHeight","calculateRect","offsetInfo","targetInfo","undefined","rect","rectLeft","rectTop","mat","prevLeft","prevTop","prevWidth","prevHeight","posOrigin","prevOrigin","minus","rectOrigin","count","inverseBeforeMatrix","invert","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","y1","x2","y2","x3","y3","x4","y4","_e","originX","originY","getShapeDirection","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","zoom","rad","getRad","getControlTransform","prev","getCSSSize","isOffset","isBoxSizing","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","getTargetInfo","moveableElement","parentContainer","beforeDirection","beforeOrigin","targetClientRect","resetClientRect","moveableClientRect","beforePosition","plus","getOrigin","getClientRect","originalBeforeOrigin","scrollWidth","scrollHeight","isExtends","innerWidth","innerHeight","clientRect","overflow","getDirection","direciton","getAttribute","dir","indexOf","getAbsolutePoses","dist","getAbsolutePosesByState","roundSign","num","unset","self","fillParams","moveable","params","datas","nextParams","state","clientX","clientY","inputEvent","currentTarget","isStartEvent","lastEvent","fillEndParams","isDrag","isDouble","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","filter","some","method","ableGroup","equals","a1","a2","selectValue","values","groupBy","arr","func","groups","groupKeys","index","groupKey","keyIndex","group","groupByMap","flat","cur","concat","maxOffset","args","sort","b","calculateInversePosition","convertDragDist","distX","distY","calculatePadding","convertCSSSize","size","isRelative","moveControlPos","controlPoses","isRect","sub","dists","directions","verticalDirection_1","horizontalDirection_1","controlPose","controlDir","isVertical","dirDir","dirHorizontal","dirVertical","getTinyDist","directionCondition","isRequest","requestAble","parentDirection","hasClass","invertObject","obj","nextObj","getTransform","transforms","beforeFunctionTexts","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts","afterFunctionTexts2","beforeFunctions","parse","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","beforeFunctionMatrix","toMat","beforeFunctionMatrix2","afterFunctionMatrix","afterFunctionMatrix2","allFunctionMatrix","targetFunctionMatrix","targetFunction","isArrayFormat","isArray","getRefTarget","isSelector","isString","querySelector","isFunction","current","getRefTargets","targets","userTargets","call","querySelectorAll","getElementTargets","selectorMap","elementTargets","getAbsoluteRotation","deg","PI","getDragDistByState","inverseMatrix","calculateMatrixDist","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","dragStart","pinchStart","angle","originalDatas","pinchable","eventName","controlEventName","pinchAbles","controlAbles","canPinch","isPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","parentDistance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","setCustomDrag","delta","isConvert","gesto","move","draggableDatas","draggable","parentEvent","client","isFlag","prevX","prevY","startX","startY","deltaX","deltaY","parentGesto","fillChildEvents","groupable","groupableDatas","childDatas","moveables","_","triggerChildGesto","isStart","match","childs","ev","childMoveable","childEvent","CustomGesto","childGestos","parentFlag","child","triggerChildAbles","eachEvent","callback","calculatePointerDist","posX","posY","getDragDist","setDragStart","absoluteOrigin","startDragBeforeDist","startDragDist","getTransformDirection","beforeTransform","resolveTransformEvent","event","functionName","transformIndex","nextTransforms","nextTransformAppendedIndexes","nextIndex","matFunctionName","beforeTransform2","targetTansform","afterTransform","afterTransform2","targetAllTransform","splice","isAppendTransform","convertTransformFormat","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","prevSize","isNaN","measureRatio","getPosIndexesByDirection","indexes","getPosesByDirection","getPosByDirection","nextPoses","average","getPosByReverseDirection","getDist","startPos","fixedDirection","fixedPos","getNextMatrix","getNextTransformMatrix","parseMat","fillTransformStartEvent","beforeRenderable","setTransform","startTransforms","splitSpace","setTransformIndex","setDefaultTransformIndex","property","findIndex","startValue","functionValue","fillOriginalTransform","getNextTransformText","fillTransformEvent","nextTransform","drag","Draggable","getTranslateDist","fixedPosition","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getOriginDirection","nextFixedOffset","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","VERTICAL_NAMES","HORIZONTAL_NAMES","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","hasGuidelines","ableName","snappable","bounds","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","getSnapDirections","snapDirections","mapSnapDirectionPoses","snapPoses","nextSnapDirections","nextSnapPoses","splitSnapDirectionPoses","horizontalNames","verticalNames","horizontal","vertical","getGapGuidelines","targetRect","snapThreshold","elementRects","gapGuidelines","mainNames","sideNames","targetStart","targetEnd","targetCenter","targetStart2","targetEnd2","elementRect","nextElementRects","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","gap","isCenter","element","className","hide","gapRects","getDefaultGuidelines","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetBottom","snapOffsetRight","snapWidth","snapHeight","throttle","calculateContainerPos","containerRect","clientPos","getSnapElementRects","containerLeft","containerTop","getMinMaxs","targetLeft","targetTop","elementLeft","elementTop","elementRight","elementBottom","middle","getElementGuidelines","elementGuidelines","prevValues","snapRect","refresh","nextElementGuidelines","diff","maintained","added","nextValues","prevIndex","elementSnapDirections","nextGuidelines","topValue","leftValue","rightValue","bottomValue","centerValue","_f","middleValue","_g","sizes","getTotalGuidelines","containerHeight","containerWidth","containerClientHeight","containerClientWidth","snapGap","totalGuidelines","_h","getGridGuidelines","checkMoveableSnapPoses","customSnapThreshold","checkSnapPoses","checkSnap","checkSnapKeepRatio","endPos","endX","endY","dx","dy","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","snapInfo","guideline","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","keepRatio","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","sign","bSign","aOffset","bOffset","getCheckSnapDirections","isStartLine","dot","line","cx","cy","hitTestLine","test1","test2","isSameStartLine","dots","error","centerSign","every","checkInnerBoundDot","threshold","checkInnerBound","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","isHorizontalStart","isVerticalStart","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","horizontalOffset","boundLine","isRender","dot1","dot2","boundDot1","boundDot2","dy1","dx1","dy2","dx2","getInnerBoundInfo","lines","multiple","sizeOffset","getInnerBoundDragInfo","getCheckInnerBoundLines","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","dir1","dir2","isBoundRotate","relativePoses","boundDots","rotate","getDistPointLine","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","checkBoundPoses","Infinity","nextBounds","checkBounds","getBounds","externalBounds","isCSS","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","renderGuideline","React","key","scaleType","createElement","renderInnerGuideline","__spreadArray","sizeValue","posValue","renderSnapPoses","renderPos","renderGuidelines","isDisplayInnerSnapDigit","renderDigitLine","lineType","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","inner","elementRect1","elementRect2","nextPos1","nextPos2","total","renderDashedGuidelines","rendered","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","sideStartPos","sideEndPos","sideCenterPos","solveEquation","solveNextOffset","isOutside","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapBoundsDrag","absolutePoses","boundPoses","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","maxWidth","maxHeight","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isWidthOutside","snapStart","snapContainer","snapContainerTarget","snapContainerRect","offset1","offset2","getNextFixedPoses","getSizeOffsetInfo","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","checkSnapResize","checkSnapScale","sizeDist","startCheckSnapDrag","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","dragRelation","Array","Object","Number","Function","onSnap","css","render","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","dragInfo","targetGesto","prevDist","prevBeforeDist","deltaOffset","distOffset","set","startRect","parentMoveable","dragRotateRad","ry","cos","rx","sin","beforeTranslate","throttleArray","beforeDist","beforeDelta","passDelta","passDist","dragAfter","param","isControl","requestStart","renderDirectionControls","defaultDirections","additionalClassName","renderPoses","rotationRad","directionMap","renderDirections","degRotation","directionRotation","renderLine","renderAllDirections","renderDiagonalDirections","setRotateStartInfo","startAbsoluteOrigin","prevDeg","prevSnapDeg","startDeg","loop","getParentDeg","moveableRect","parentDist","getDeg","throttleRotate","prevLoop","absolutePrevSnapDeg","absoluteDeg","getRotateInfo","getRotationPositions","radPoses","isReverse","rotationTarget","contains","rotatable","String","onRotateStart","onRotate","onRotateEnd","onRotateGroupStart","onRotateGroup","onRotateGroupEnd","positions","jsxs","absoluteInfo","externalRotate","beforeInfo","afterInfo","rotatation","isRotate","groupDelta","targetDirection","_k","_l","beforeRotate","absoluteDelta","absoluteDist","absoluteRotate","absoluteStartDeg","_j","inverseDist","inverseDelta","prevInverseDist","dragGroupControlCondition","parentLeft","parentTop","parentBeforeOrigin","childClient","groupClient","rotateMatrix","distRotate","startRotation","getRotation","deltaRotate","resizable","throttleResize","onResizeStart","onResize","onResizeEnd","onResizeGroupStart","onResizeGroup","onResizeGroupEnd","edge","startOffsetWidth","startOffsetHeight","startWidth","startHeight","padding","minSize","maxSize","minWidth","minHeight","isParentElement","containerStyle","convertUnitSize","isWidth","setRatio","ratio","isFinite","setFixedDirection","setMin","setMax","setOrigin","isResize","parentScale","parentKeepRatio","dragClient","sizeDirection","distWidth","distHeight","standardRad","signSize","startWidthSize","startHeightSize","distSize","ratioRad","nextDirection","snapDist","isNoSnap","calculateBoundSize","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalEvents","setDist","createRotateMatrix","originalX","originalY","deltaWidth","deltaHeight","scalable","throttleScale","onScaleStart","onScale","onScaleEnd","onScaleGroupStart","onScaleGroup","onScaleGroupEnd","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","dragDist","distScaleWidth","distScaleHeight","dragRad","stateDirection","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","areaElement","removeClass","cssText","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","on","scrollBy","checkScroll","dragGroupContro","dragGroupControEnd","dragTarget","portalContainer","useResizeObserver","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","hideDefaultLines","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","raws","rawPos","styles","getRadiusRange","horizontalRange","verticalRange","clipPose","getRadiusValues","minCounts","splitIndex","splitLength","horizontalValues","verticalValues","nwValue","neValue","seValue","swValue","wnValue","enValue","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getClipPath","defaultClip","customClip","clipText","clip","clipPrefix","splitter","splitComma","xPos","yPos","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","radiusPoses","_s","addClipPath","clipEventType","clipStyle","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isClipStart","isLine","isArea","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","snapOffsetY","snapOffsetX","distSnapX","distSnapY","j","nextClipStyles","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","dragDelta","deltaOrigin","addBorderRadius","lineIndex","horizontalsLength","verticalsLength","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","roundable","minRoundControls","maxRoundControls","roundClickable","onRoundStart","onRound","onRoundEnd","verticalCount","horizontalCount","isDisplay","display","controlIndex","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","startTransform","resetTransform","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","resultCount","fillDragEndParams","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","controlGesto","updateRect","requestAble_1","eventAbles","BeforeRenderable","Renderable","elementFromPoint","results","nextDatas","isEventStart","isUpdate","isForceEnd","preventDefault","isUnmounted","forceUpdate","getTargetAbleGesto","moveableTarget","controlBox","getElement","startFunc","eventTarget","isMoveableElement","getAbleGesto","conditionFunctions","options","Gesto","stop","addEventListener","onEvent","removeEventListener","__extends","stopPropagation","removeEvent","onPreventClick","isDragging","checkUpdateRect","cancelAnimationFrame","_observerId","parentPosition","propsTarget","ControlBoxElement","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","renderAbles","_renderLines","wrapperMoveable","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","prevProps","manager","destroy","triggerDragStart","Element","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","updateState","statePos","isInstant","requsetAble","ableRequester","requester","ableParam","componentWillUnmount","stateLeft","stateTop","stateContainer","updateAbles","isChanged","moveableContainer","unsetAbles","tag","customStyleMap","customStyledMap","styled","targetAbles","always","nextState","setState","Renderer","ResizeObserver","_observer","disconnect","observer","observe","box","controlBoxElement","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","_prevTarget","_prevDragArea","useDragArea","prevTarget","prevDragArea","isTargetChanged","isDragAreaChanged","eventKeys","getKeys","hasAbles","EventManager","setAbles","MoveableManager","cssStyled","defaultGroupRotate","defaultGroupOrigin","refs","clickable","addEvent","endEvent","containsElement","containsTarget","targetIndex","parentTarget","getDraggableEvent","individualGroupable","MOVEABLE_ABLES","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","getMaxPos","getMinPos","getGroupRect","moveablePoses","minX","minY","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1MinMax_1","b2MinMax_1","b1","b2","rotatePoses","changedWidth","ChildrenDiffer","updateGroup","_super","nextTarget","isContainerChanged","differ","update","changed","removed","MoveableGroup","defaultProps","InitialMoveable","cssMap","getTotalAbles","text","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","makeStyled","userAbles","userProps","refTargets","_updateRefs","isGroup","totalAbles","nextProps","MoveableIndividualGroup","prevRefTargets","nextRefTargets","isBrowser","nextSelectorMap","__decorate","withMethods","Moveable","makeMoveable","others"],"mappings":"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"}