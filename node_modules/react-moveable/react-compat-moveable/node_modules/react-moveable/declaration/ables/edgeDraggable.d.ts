import { DraggableProps, MoveableGroupInterface, MoveableManagerInterface } from "../types";
declare const _default: {
    readonly events: {};
    readonly props: {
        readonly edgeDraggable: BooleanConstructor;
    };
    readonly name: "edgeDraggable";
} & {
    dragControlCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any): boolean;
    dragControlStart(moveable: MoveableManagerInterface<DraggableProps>, e: any): false | import("../types").OnDragStart;
    dragControl(moveable: MoveableManagerInterface<DraggableProps>, e: any): import("../types").OnDrag | undefined;
    dragControlEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any): any;
    dragGroupControlCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any): boolean;
    dragGroupControlStart(moveable: MoveableGroupInterface<DraggableProps>, e: any): false | import("../types").OnDragStart;
    dragGroupControl(moveable: MoveableGroupInterface<DraggableProps>, e: any): import("../types").OnDragGroup | undefined;
    dragGroupControlEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any): any;
    unset(moveable: any): void;
};
export default _default;
